#bentpelagic_main_p <-  hdr(Main_models$Habitatbenthopelagic)
body_lit_inter_main_p <-  hdr(Main_models$`log10(Bodymass.g.):Light_Levellow`)
phylo_main_p <-  hdr(Main_models$phylogenetic.variance)
H_main <- Main_models$phylogenetic.variance/c(Main_models$phylogenetic.variance + Main_models$residual.variance)
unit_main_p <-  hdr(Main_models$residual.variance)
mass_log10_main_p
dev.new()
plot(cff_raw$Max_CFF_Hz ~ log10(cff_raw$Bodymass.g.),
col = "white",
pch = 16,
bty = "n",
ylab = "CFF (Hz)",
xlab = "log10 of Mass (g)")
points(cff_raw[cff_raw$Light_Level == "low", "Max_CFF_Hz"] ~ log10(cff_raw[cff_raw$Light_Level == "low", "Bodymass.g."]),
col = "grey70",
pch= 16)
points(cff_raw[cff_raw$Light_Level == "high", "Max_CFF_Hz"] ~ log10(cff_raw[cff_raw$Light_Level == "high", "Bodymass.g."]),
col = rgb(247/250,224/250,89/250),
pch= 16)
points(cff_raw[cff_raw$Habitat== "volant", "Max_CFF_Hz"] ~ log10(cff_raw[cff_raw$Habitat== "volant", "Bodymass.g."]),
col = "white",
pch= 16, cex = 0.5)
##high light
abline(inter_main_p$mode, mass_log10_main_p$mode,
col = rgb(247/250,224/250,89/250),
lty = 4,
lwd = 3)
##low light
abline(inter_main_p$mode + lit_low_main_p$mode,
mass_log10_main_p$mode + body_lit_inter_main_p$mode,
col = "grey70",
lty = 4,
lwd = 3)
cff_t <- cff_clean[cff_clean$Habitat %in% c("volant",
"terrestrial"
#,"arboreal"
),]
cff_t$Habitat <- factor(cff_t$Habitat,
levels = c("terrestrial",
"volant"
#,"arboreal"
))
cff_mul_terr <- as.mulTree(cff_t,
cff_tree,
taxa = "animal",
rand.terms = ~animal,
clean.data = FALSE)
ter_models <-   read.mulTree(mulTree.chain = "cff_terr_models",
convergence = FALSE,
model = FALSE,
extract = NULL)
getwd()
setwd("~/Desktop/GitHub/CFF_full_animal")
ter_models <-   read.mulTree(mulTree.chain = "cff_terr_models",
convergence = FALSE,
model = FALSE,
extract = NULL)
inter_ter_p <-  hdr(ter_models$`(Intercept)`)
mass_log10_ter_p <-  hdr(ter_models$`log10(Bodymass.g.)`)
lit_low_ter_p <-  hdr(ter_models$Light_Levellow)
ballistic_ter_p <-  hdr(ter_models$mode_of_lifepred_ballistic)
#scav_ter_p <-  hdr(ter_models$mode_of_lifescavenger)
pur_ter_p <-  hdr(ter_models$mode_of_lifepred_pursuit)
#herb_ter_p <-  hdr(ter_models$mode_of_lifeherbivore)
vol_ter_p <-  hdr(ter_models$Habitatvolant)
#arb_ter_p <-  hdr(ter_models$Habitatarboreal)
body_lit_inter_ter_p <-  hdr(ter_models$`log10(Bodymass.g.):Light_Levellow`)
phylo_ter_p <-  hdr(ter_models$phylogenetic.variance)
H_ter <- ter_models$phylogenetic.variance/c(ter_models$phylogenetic.variance + ter_models$residual.variance)
unit_ter_p <-  hdr(ter_models$residual.variance)
cff_m <- cff_clean[cff_clean$Habitat %in% c("pelagic",
"demersal"
#"marine_reef",
#"benthopelagic"
#,"bathypelagic"
),]
cff_m$Habitat <- factor(cff_m$Habitat,
levels = c("demersal",
"pelagic"
#"marine_reef",
#"benthopelagic",
#"bathypelagic"
))
mar_models <-   read.mulTree(mulTree.chain = "cff_mar_models",
convergence = FALSE,
model = FALSE,
extract = NULL)
inter_mar_p <-  hdr(mar_models$`(Intercept)`)
mass_log10_mar_p <-  hdr(mar_models$`log10(Bodymass.g.)`)
lit_low_mar_p <-  hdr(mar_models$Light_Levellow)
ballistic_mar_p <-  hdr(mar_models$mode_of_lifepred_ballistic)
#scav_mar_p <-  hdr(mar_models$mode_of_lifescavenger)
pur_mar_p <-  hdr(mar_models$mode_of_lifepred_pursuit)
body_lit_inter_mar_p <-  hdr(mar_models$`log10(Bodymass.g.):Light_Levellow`)
phylo_mar_p <-  hdr(mar_models$phylogenetic.variance)
H_mar <- mar_models$phylogenetic.variance/c(mar_models$phylogenetic.variance + mar_models$residual.variance)
unit_mar_p <-  hdr(mar_models$residual.variance)
plot(cff_m[, "Max_CFF_Hz"] ~ jitter(as.numeric(cff_m[, "mode_of_life"])),
col = "white",
pch= 16,
bty = "n",
xlim = c(0.5,4.5))
points(cff_m[cff_m$Light_Level == "low", "Max_CFF_Hz"] ~ jitter(as.numeric(cff_m[cff_m$Light_Level == "low", "mode_of_life"]), 0.5),
col = "grey70",
pch= 16)
points(cff_m[cff_m$Light_Level == "high", "Max_CFF_Hz"] ~ jitter(as.numeric(cff_m[cff_m$Light_Level == "high", "mode_of_life"]), 0.5),
col = rgb(247/250,224/250,89/250),
pch= 16)
points(median(cff_m[cff_m$mode_of_life == "pred_forage", "Max_CFF_Hz"]) ~ c(1), pch = 3 )
points(median(cff_m[cff_m$mode_of_life == "pred_ballistic", "Max_CFF_Hz"]) ~ c(3), pch = 3 )
points(median(cff_m[cff_m$mode_of_life == "pred_pursuit", "Max_CFF_Hz"]) ~ c(4), pch = 3 )
ballistic_mar_p
pur_mar_p
ballistic_ter_p
vol_ter_p
ballistic_ter_p
ballistic_mar_p
mass_log10_mar_p
cff_raw <- read.csv("final_cff_data_27_july_2021.csv",
header = T,
sep = ",")
colnames(cff_raw)[1] <- "Scientific_name"
#cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
#cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
#cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "benthopelagic",]$Habitat <- "pelagic"
#cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw[cff_raw$Habitat == "arboreal",]$Habitat <- "terrestrial"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
"pred_pursuit"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
#"arboreal",
"pelagic",
"demersal",
"volant"
))
cff_clean <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean <- data.frame(cff_clean, animal = cff_clean$Scientific_name)
cff_clean <- na.omit(cff_clean)
library(phytools)
library(caper)
library(MCMCglmm)
library(hdrcde)
library(mulTree)
source("MultiDisPlot.R")
Main_models <-   read.mulTree(mulTree.chain = "mulTree_models",
convergence = FALSE,
model = FALSE,
extract = NULL)
inter_main_p <-  hdr(Main_models$`(Intercept)`)
mass_log10_main_p <-  hdr(Main_models$`log10(Bodymass.g.)`)
lit_low_main_p <-  hdr(Main_models$Light_Levellow)
deposite_main_p <-  hdr(Main_models$mode_of_lifedeposite)
ballistic_main_p <-  hdr(Main_models$mode_of_lifepred_ballistic)
#scav_main_p <-  hdr(Main_models$mode_of_lifescavenger)
pur_main_p <-  hdr(Main_models$mode_of_lifepred_pursuit)
#herb_main_p <-  hdr(Main_models$mode_of_lifeherbivore)
pel_main_p <-  hdr(Main_models$Habitatpelagic)
dem_main_p <-  hdr(Main_models$Habitatdemersal)
#reef_main_p <-  hdr(Main_models$Habitatmarine_reef)
#bath_main_p <-  hdr(Main_models$Habitatbathypelagic)
vol_main_p <-  hdr(Main_models$Habitatvolant)
#arb_main_p <-  hdr(Main_models$Habitatarboreal)
#bentpelagic_main_p <-  hdr(Main_models$Habitatbenthopelagic)
body_lit_inter_main_p <-  hdr(Main_models$`log10(Bodymass.g.):Light_Levellow`)
phylo_main_p <-  hdr(Main_models$phylogenetic.variance)
H_main <- Main_models$phylogenetic.variance/c(Main_models$phylogenetic.variance + Main_models$residual.variance)
unit_main_p <-  hdr(Main_models$residual.variance)
summary(Main_models)
H_main <- Main_models$phylogenetic.variance/c(Main_models$phylogenetic.variance + Main_models$residual.variance)
H_main
hdr(H_main)
unit_main_p <-  hdr(Main_models$residual.variance)
unit_main_p
unit_main_p <- Main_models$residual.variance/c(Main_models$phylogenetic.variance + Main_models$residual.variance)
unit_main_p
hdr(unit_main_p)
knitr::opts_chunk$set(echo = TRUE)
library(viridis)
source("fishFunctions.R")
knitr::opts_chunk$set(echo = TRUE)
library(viridis)
source("fishFunctions.R")
# Number of time steps to run the model.
reps <- 2000
# The number of age stages
n.stages <- 25
# initial conditions
N.0 <- numeric(n.stages)
N.0[1] <- 1000
N.0[10] <- 1
# perturbations set to basic multiplier of 1
fec_pert <- matrix(1, ncol = n.stages, nrow = reps + 1)
sur_pert <- rep(1, reps + 1)
a <- rep(1, reps)
b <- rep(0.0007, reps)
#run the cod population projection model with intial conditions.
res <- codDynamics(N.0, reps = reps, fec_pert, sur_pert,a  = a, b = b)
#plot the output
palette(viridis::viridis(n.stages))
matplot(res, type = "l", lty = 1, col = 1:n.stages)
#Save the intial conditions
N.equib <- as.numeric(tail(res, 1))
reps = 30
pert_years <- 1
# proportional multipliers for the fecundity and survivorship
fec_prop <- 1
sur_prop <- 1.2
# set up the matrices and vectors for the perturbation with proportions
# of 1
fec_pert <- matrix(1, ncol = n.stages, nrow = reps + 1)
sur_pert <- rep(1, reps + 1)
a_pert <- rep(1, 100)
b_pert <- rep(0.0007, 100)
# add in the defined proportional change
fec_pert[pert_years,] <- fec_pert[pert_years,] * fec_prop
sur_pert[pert_years]  <- sur_pert[pert_years]  * sur_prop
# run the model
res <- codDynamics(N.equib, reps = reps, fec_pert, sur_pert, a = a_pert, b = b_pert)
# plot the projection
matplot(res, type = "l", lty = 1, col = 1:n.stages)
abline( v = 0, col = 4, lt = 1)
abline( v = 5, col = 5, lt = 3)
abline( v = 10, col = 6, lt = 3)
abline( v = 15, col = 7, lt = 3)
# here we define adults as being older than 3 years
thresh <- 3
catchable <- rowSums(res[ , (thresh + 1):n.stages ])
tt <- 0:reps
plot(tt, catchable, type = "l", lwd = 2,
lty = 1, col = 1,
ylab = "Number of Adult Cod",
xlab = "time relative to perturbation in years",
bty = "L")
abline( v = 0,  col = 4, lt = 1)
abline( v = 1, col = 10, lt = 2)
abline( v = 2, col = 10, lt = 2)
abline( v = 3, col = 10, lt = 2)
abline( v = 4, col = 10, lt = 2)
abline( v = 5,  col = 6, lt = 1)
abline( v = 10, col = 8, lt = 1)
# add the maxima and minima using our new function changeDynamics()
maxmin <- changeDynamics(x = tt, y = catchable)
with(maxmin,{
points(short.x[maxima], short.y[maxima], pch = 19, col = 7, cex = 2)
points(short.x[minima], short.y[minima], pch = 17, col = 7, cex = 2)
})
# number of years per simulation
reps = 30
#range of fecundity multipliers or 100%, 200% and 25% or current fecundity
do.fec <- seq(1, 2, 0.25)
#range of survival multipliers ranging from 100% to 120% of initual surviorship
do.sur <- c(1, 1.05, 1.1, 1.15, 1.2)
#run for 1 year
do.years <- c(1)
res.yrs <- res.sur <- res.fec <- numeric(length(do.fec) *
length(do.sur) *
length(do.years))
res.catch <- matrix(0, reps+1, length(do.fec) *
length(do.sur) *
length(do.years))
do.plot <- TRUE
ct <- 1
fec.counter <- 1
for (i in do.fec) {
if (do.plot) {
# spawn a new plotting window on each outer loop
if(ct >1) plot.new()
# hard code the number of panels
par(mfrow = c(2,3))
}
for (j in do.sur) {
for (k in do.years){
res.fec[ct] <- i
res.sur[ct] <- j
res.yrs[ct] <- k
# set up the matrices and vectors for the perturbation with proportions
# of 1
fec_pert <- matrix(1, ncol = n.stages, nrow = reps + 1)
sur_pert <- rep(1, reps + 1)
pert_years <- 1:k
# add in the defined proportional change
fec_pert[pert_years,] <- fec_pert[pert_years,] * i
sur_pert[pert_years]  <- sur_pert[pert_years]  * j
a_pert <- rep(1, 100)
b_pert <- rep(0.0007, 100)
# run the model
res <- codDynamics(N.equib, reps = reps, fec_pert, sur_pert, a = a_pert, b = b_pert)
# here we define adults as being older than 3 years
thresh <- 2
catchable <- rowSums(res[ , (thresh + 1):n.stages ])
tt <- 0:reps
if (do.plot){
plot(tt, catchable, type = "l", lwd = 2,
lty = 1, col = 1,
ylab = "Number of Adult Cod",
xlab = "time relative to perturbation in years",
bty = "L",
main = paste0("fec ", i, "| surv ", j))
abline( v = 0, col = 4, lt = 1)
abline( v = 5, col = 6, lt = 1)
abline( v = 10, col = 8, lt = 1)
abline( v = 15, col = 10, lt = 1)
# add the maxima and minima using our new function changeDynamics()
maxmin <- changeDynamics(x = tt, y = catchable)
with(maxmin,{
points(short.x[maxima], short.y[maxima], pch = 19, col = 7, cex = 2)
points(short.x[minima], short.y[minima], pch = 17, col = 7, cex = 2)
})
}
# record the catch results
res.catch[,ct] <- catchable
# update the counter
ct <- ct + 1
}
}
}
scaled.res <- apply(res.catch, 2,
function(x){
x <- x - x[1]
# divide by sd() only if values show variation
if(all(x)){ x <- x / sd(x)}
return(x)
})
plot.new()
matplot(tt, scaled.res, col = "grey", type = "l", lty = 1,
ylab = "Relative number of adult cod (1e+08 sd)",
xlab = "Time in years after perturbation",
bty = "L", xlim = c(-2, reps+2),
las = 1, axes = F)
axis(1, at = seq(0, 30, 5), lwd = 0, lwd.ticks = 1)
# axis(1, at = c(-2, 32), lwd = 1, labels=c("",""), lwd.ticks=0)
axis(2, at = seq(-2e+08, 3e+08, 1e+08),
labels = seq(-2, 3, 1),
las = 1, lwd = 0, lwd.ticks = 1)
box(bty = "L")
abline( v = 0,  col = 4, lt = 1)
abline( v = 1, col = 10, lt = 2)
abline( v = 2, col = 10, lt = 2)
abline( v = 3, col = 10, lt = 2)
abline( v = 4, col = 10, lt = 2)
abline( v = 5,  col = 6, lt = 1)
abline( v = 10, col = 8, lt = 1)
# a long simulation
reps <- 2000
# how many age stages
n.stages <- 10
# initial conditions
N.0 <- numeric(n.stages)
N.0[1] <- 1000
N.0[10] <- 1
# perturbations set to basic multiplier of 1
fec_pert <- matrix(1, ncol = n.stages, nrow = reps + 1)
sur_pert <- rep(1, reps + 1)
res <- herringDynamics(N.0, reps = reps, fec_pert, sur_pert)
palette(viridis::viridis(n.stages))
matplot(res, type = "l", lty = 1, col = 1:n.stages)
N.equib <- as.numeric(tail(res, 1))
reps = 30
pert_years <- 1
# proportional multipliers for the fecundity and survivorship
fec_prop <- 1.1
sur_prop <- 1
# set up the matrices and vectors for the perturbation with proportions
# of 1
fec_pert <- matrix(1, ncol = n.stages, nrow = reps + 1)
sur_pert <- rep(1, reps + 1)
# add in the defined proportional change
fec_pert[pert_years,] <- fec_pert[pert_years,] * fec_prop
sur_pert[pert_years]  <- sur_pert[pert_years]  * sur_prop
# run the model
res <- herringDynamics(N.equib, reps = reps, fec_pert, sur_pert)
matplot(res, type = "l", lty = 1, col = 1:n.stages)
abline( v = 0, col = 4, lt = 1)
abline( v = 5, col = 5, lt = 3)
abline( v = 10, col = 6, lt = 3)
abline( v = 15, col = 7, lt = 3)
# here we define adults as being older than 3 years
thresh <- 3
catchable <- rowSums(res[ , (thresh + 1):n.stages ])
tt <- 0:reps
plot(tt, catchable, type = "l", lwd = 2,
lty = 1, col = 1,
ylab = "Number of Adult Herring",
xlab = "time relative to perturbation in years",
bty = "L")
abline( v = 0, col = 4, lt = 1)
abline( v = 5, col = 6, lt = 1)
abline( v = 10, col = 8, lt = 1)
abline( v = 15, col = 10, lt = 1)
# add the maxima and minima using our new function changeDynamics()
maxmin <- changeDynamics(x = tt, y = catchable)
with(maxmin,{
points(short.x[maxima], short.y[maxima], pch = 19, col = 7, cex = 2)
points(short.x[minima], short.y[minima], pch = 17, col = 7, cex = 2)
})
# number of years per simulation
reps <- 30
#
do.fec <- seq(1, 2, 0.25)
do.sur <- c(1, 1.05, 1.1, 1.15, 1.2)
do.years <- c(5)
res.yrs <- res.sur <- res.fec <- numeric(length(do.fec) *
length(do.sur) *
length(do.years))
res.catch <- matrix(0, reps+1, length(do.fec) *
length(do.sur) *
length(do.years))
do.plot <- TRUE
ct <- 1
fec.counter <- 1
for (i in do.fec) {
if (do.plot) {
# spawn a new plotting window on each outer loop
if(ct >1) plot.new()
# hard code the number of panels
par(mfrow = c(2,3))
}
for (j in do.sur) {
for (k in do.years){
res.fec[ct] <- i
res.sur[ct] <- j
res.yrs[ct] <- k
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
# set up the matrices and vectors for the perturbation with proportions
# of 1
fec_pert <- matrix(1, ncol = n.stages, nrow = reps + 1)
sur_pert <- rep(1, reps + 1)
pert_years <- 1:k
# add in the defined proportional change
fec_pert[pert_years,] <- fec_pert[pert_years,] * i
sur_pert[pert_years]  <- sur_pert[pert_years]  * j
# run the model
res <- herringDynamics(N.equib, reps = reps, fec_pert, sur_pert)
# here we define adults as being older than 3 years
thresh <- 3
catchable <- rowSums(res[ , (thresh + 1):n.stages ])
tt <- 0:reps
if (do.plot){
plot(tt, catchable, type = "l", lwd = 2,
lty = 1, col = 1,
ylab = "Number of Adult Herring",
xlab = "time relative to perturbation in years",
bty = "L",
main = paste0("fec ", i, "| surv ", j))
abline( v = 0, col = 4, lt = 1)
abline( v = 5, col = 6, lt = 1)
abline( v = 10, col = 8, lt = 1)
abline( v = 15, col = 10, lt = 1)
# add the maxima and minima using our new function changeDynamics()
maxmin <- changeDynamics(x = tt, y = catchable)
with(maxmin,{
points(short.x[maxima], short.y[maxima], pch = 19, col = 7, cex = 2)
points(short.x[minima], short.y[minima], pch = 17, col = 7, cex = 2)
})
}
# record the catch results
res.catch[,ct] <- catchable
# update the counter
ct <- ct + 1
}
}
}
scaled.res <- apply(res.catch, 2,
function(x){
x <- x - x[1]
# divide by sd() only if values show variation
if(all(x>0)){ x <- x / sd(x)}
return(x)
})
# plot.new()
matplot(tt, scaled.res, col = "grey", type = "l", lty = 1,
ylab = "Relative number of adult herrring (1e+09 sd)",
xlab = "Time in years after perturbation",
bty = "L", xlim = c(-2, reps+2),
las = 1, axes = F)
axis(1, at = seq(0, 30, 5), lwd = 0, lwd.ticks = 1)
# axis(1, at = c(-2, 32), lwd = 1, labels=c("",""), lwd.ticks=0)
axis(2, at = seq(-1e+09, 5e+09, 1e+09),
labels = seq(-1, 5, 1),
las = 1, lwd = 0, lwd.ticks = 1)
box(bty = "L")
abline( v = 0,  col = 4, lt = 1)
abline( v = 5,  col = 6, lt = 1)
abline( v = 10, col = 8, lt = 1)
abline( v = 15, col = 10, lt = 1)
?t-test
?t.test
15.12 + 15.12*0.1
15.12 + 2
15.12 + 3
1/4.741
1/4.74
mean
sd
mode()
mode
mode
