"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
lamp_data <- cff_clean[cff_clean$taxa_phyla == "Lampetra_fluviatillis",]
lamp_data <- cff_clean[cff_clean$taxa_phyla == "Lampetra_fluviatillis",]
bind_single(species = lamp_data$Scientific_name,
tree = shark_fish_tree[[1]],
root.age = 615,
sample = sample.no)
bind_single(species = lamp_data$Scientific_name,
tree = shark_fish_tree,
root.age = 615,
sample = sample.no)
bind_single(species = lamp_data$Scientific_name,
tree = shark_fish_tree,
root.age = 615)
bind_single(species = lamp_data$Scientific_name,
tree = shark_fish_tree[[1]],
root.age = 615)
bind_single
tip_lamp <-list(edge=matrix(c(2,1),1,2),
tip.label= "Lampetra_fluviatillis",
edge.length=1.0,
Nnode=1)
tip_lamp
class(tip_lamp)<-"phylo"
jiggle.bind(x = tip_lamp,
y = shark_fish_tree,
sample = sample.no,
min.age = 615,
max.age = 615)
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw[cff_raw$mode_of_life == "parasite",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
lamp_data <- cff_clean[cff_clean$taxa_phyla == "Lampetra_fluviatillis",]
tip_lamp <-list(edge=matrix(c(2,1),1,2),
tip.label= "Lampetra_fluviatillis",
edge.length=1.0,
Nnode=1)
class(tip_lamp)<-"phylo"
chordata_tree_o <- jiggle.bind(x = tip_lamp,
y = shark_fish_tree,
sample = sample.no,
min.age = 515,
max.age = 642)
invert_data <- cff_clean[cff_clean$taxa_group == "invert",]
met_tree2 <- met_tree
for(i in 1:(length(invert_data$Scientific_name))){
met_tree2$tip.label[grep(invert_data$Scientific_name[i],met_tree2$tip.label)] <- sub("_ott.*", "",met_tree$tip.label[grep(invert_data$Scientific_name[i],met_tree$tip.label)])
}
#12 species need to be fixed
invert_tree <- comparative.data(phy = met_tree2,
data = invert_data,
names.col = "Scientific_name" ,
force.root = TRUE)
invert_tree_ult <-compute.brlen(invert_tree$phy,
method = "Grafen",
power = 1)
##Need to get a sensable split. age should be at lungfish or somerthing
invert_tree_ult$edge.length <- invert_tree_ult $edge.length*550
bi_lat_tree_o <- jiggle.bind(x = invert_tree_ult,
y = shark_fish_tree,
sample = sample.no,
min.age = 643,
max.age = 850)
bi_lat_tree <- bi_lat_tree_o[[1]]
bi_lat_node <- bi_lat_tree_o[[2]]
class(bi_lat_tree) <- "multiPhylo"
final_tree<- list()
for(i in 1:(length(bi_lat_tree))){
bi_lat_tree[[i]]$node.label = "NA"
bi_lat_tree[[i]] <-compute.brlen(bi_lat_tree[[i]],
method = "Grafen",
power = 1)
}
final_cff_data <- comparative.data(phy = bi_lat_tree[[1]],
data = cff_clean,
names.col = "Scientific_name",
force.root = TRUE)
cff_clean$Scientific_name
final_cff_data$dropped
final_cff_data$phy
chordata_tree <- chordata_tree_o[[1]]
chordata_tree_node <- chordata_tree_o[[2]]
class(chordata_tree) <- "multiPhylo"
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw[cff_raw$mode_of_life == "parasite",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
invert_data <- cff_clean[cff_clean$taxa_group == "invert",]
met_tree2 <- met_tree
for(i in 1:(length(invert_data$Scientific_name))){
met_tree2$tip.label[grep(invert_data$Scientific_name[i],met_tree2$tip.label)] <- sub("_ott.*", "",met_tree$tip.label[grep(invert_data$Scientific_name[i],met_tree$tip.label)])
}
#12 species need to be fixed
invert_tree <- comparative.data(phy = met_tree2,
data = invert_data,
names.col = "Scientific_name" ,
force.root = TRUE)
invert_tree_ult <-compute.brlen(invert_tree$phy,
method = "Grafen",
power = 1)
##Need to get a sensable split. age should be at lungfish or somerthing
invert_tree_ult$edge.length <- invert_tree_ult $edge.length*850
bi_lat_tree_o <- jiggle.bind(x = invert_tree_ult,
y = chordata_tree,
sample = sample.no,
min.age = 643,
max.age = 850)
bi_lat_tree <- bi_lat_tree_o[[1]]
bi_lat_node <- bi_lat_tree_o[[2]]
class(bi_lat_tree) <- "multiPhylo"
final_tree<- list()
for(i in 1:(length(bi_lat_tree))){
bi_lat_tree[[i]]$node.label = "NA"
bi_lat_tree[[i]] <-compute.brlen(bi_lat_tree[[i]],
method = "Grafen",
power = 1)
}
final_cff_data <- comparative.data(phy = bi_lat_tree[[1]],
data = cff_clean,
names.col = "Scientific_name",
force.root = TRUE)
final_cff_data$dropped
met_tree2
grep("Glossina_morsitans",met_tree2)
grep("Parus_caeruleus",aves_phy)
met_tree2[4]
met_tree2[4]
grep("Glossina_morsitans",met_tree2[[1]])
grep("Glossina",met_tree2[[1]])
grep("morsitans",met_tree2[[1]])
met_tree2[[1]]
met_tree2
grep("morsitans",met_tree2$tip.label)
grep("Glossina_morsitans",met_tree2$tip.label)
met_tree2$tip.label[grep("Glossina_morsitans",met_tree2$tip.label)]
grep("Parus_caeruleus",aves_phy)
grep("Parus_caeruleus",aves_phy[[1]]$tip.label)
Aves_phy[[1]]$tip.label[grep("Parus_caeruleus",aves_phy[[1]]$tip.label)]
aves_phy[[1]]$tip.label[grep("Parus_caeruleus",aves_phy[[1]]$tip.label)]
require(mulTree)
library(devtools)
library(MASS)
library(phytools)
library(caper)
library(taxize)
library(fishtree)
library(rotl)
library(phangorn)
source("phylo_bind_functions.R")
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw[cff_raw$mode_of_life == "parasite",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
setwd("/Users/kh214/Desktop/Phlyogenies")
#Metazoan backbone
met_tree <- read.tree("metazoa.tre")
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw[cff_raw$mode_of_life == "parasite",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
setwd("/Users/kh214/Desktop/Phlyogenies")
#Metazoan backbone
met_tree <- read.tree("metazoa.tre")
met_tree  <- makeLabel(met_tree)
met_tree <- drop.tip(met_tree,"Homo_sapiens")
met_tree$node.label<-NULL
#Mammal phylogeny
mammal_phy <- read.nexus("FritzTree.rs200k.100trees.tre")
#Aves phylogeny
aves_phy <- read.tree("BirdzillaHackett10.tre")
#Lizard phylogeny
Lizard_phy <- read.tree("liz_and_snake_time_tree.txt")
lizard_phy<-makeLabel(Lizard_phy)
#this removes the node lables which can cause dublicate problems
lizard_phy$node.label<-NULL
#Turtle phylogeny
Turt_phy <- read.nexus("Turtle_Posterior_100.tre")
#amphiban phylo
amph_phy <- read.tree("Amphi.tre")
amph_phy <- drop.tip(amph_phy, "Homo_sapiens")
#this removes the node lables which can cause dublicate problems
amph_phy$node.label<-NULL
#Shark
shark_phy <- read.nexus("Shark_10.cal.tree.nex")
# lets also set the number of trees we will build.
# As we will have to drop trees due to the inclusion of uncertinatly in node age
# creating trees that dont corresponse with the structure of our backbone phylogeny
# we need to more than 100
sample.no <- 300
setwd("/Users/kh214/Desktop/GitHub/CFF_full_animal")
diapsid_o <- jiggle.bind(x = aves_phy,
y = Turt_phy,
sample = 300,
min.age = 156,
max.age = 250)
diapsid <- diapsid_o[[1]]
diapsid_node <- diapsid_o[[2]]
class(diapsid) <- "multiPhylo"
bird_lizard_o <- jiggle.bind(x = diapsid,
y = lizard_phy,
sample = 300,
min.age = 259,
max.age = 285)
bird_lizard <- bird_lizard_o[[1]]
bird_lizard__node <- bird_lizard_o[[2]]
class(bird_lizard) <- "multiPhylo"
amniote_tree_o <- jiggle.bind(x = bird_lizard,
y = mammal_phy,
sample = sample.no,
min.age = 314.6,
max.age = 318.1)
amniote_tree <- amniote_tree_o[[1]]
amniote_node <- amniote_tree_o[[2]]
class(amniote_tree) <- "multiPhylo"
amni_amphi_tree_o <- jiggle.bind(x = amniote_tree,
y = amph_phy,
sample = sample.no,
min.age = 359.2,
max.age = 359.2)
amni_amphi_tree <- amni_amphi_tree_o[[1]]
amni_amphi_node <- amni_amphi_tree_o[[2]]
class(amni_amphi_tree) <- "multiPhylo"
fish_data <- cff_clean[cff_clean$taxa_phyla %in% c("fish"),]
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw[cff_raw$mode_of_life == "parasite",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
diapsid_o <- jiggle.bind(x = aves_phy,
y = Turt_phy,
sample = 300,
min.age = 156,
max.age = 250)
diapsid <- diapsid_o[[1]]
diapsid_node <- diapsid_o[[2]]
class(diapsid) <- "multiPhylo"
bird_lizard_o <- jiggle.bind(x = diapsid,
y = lizard_phy,
sample = 300,
min.age = 259,
max.age = 285)
bird_lizard <- bird_lizard_o[[1]]
bird_lizard__node <- bird_lizard_o[[2]]
class(bird_lizard) <- "multiPhylo"
amniote_tree_o <- jiggle.bind(x = bird_lizard,
y = mammal_phy,
sample = sample.no,
min.age = 314.6,
max.age = 318.1)
amniote_tree <- amniote_tree_o[[1]]
amniote_node <- amniote_tree_o[[2]]
class(amniote_tree) <- "multiPhylo"
amni_amphi_tree_o <- jiggle.bind(x = amniote_tree,
y = amph_phy,
sample = sample.no,
min.age = 359.2,
max.age = 359.2)
amni_amphi_tree <- amni_amphi_tree_o[[1]]
amni_amphi_node <- amni_amphi_tree_o[[2]]
class(amni_amphi_tree) <- "multiPhylo"
fish_data <- cff_clean[cff_clean$taxa_phyla %in% c("fish"),]
cff_clean
require(mulTree)
library(devtools)
library(MASS)
library(phytools)
library(caper)
library(taxize)
library(fishtree)
library(rotl)
library(phangorn)
source("phylo_bind_functions.R")
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw
cff_raw <- read.csv("Cff_main_data_pre_phylo_22_July_2021.csv",
header = T,
sep = ",")
cff_raw[cff_raw$mode_of_life == "parasite",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "scavenger",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$mode_of_life == "herbivore",]$mode_of_life <- "pred_forage"
cff_raw[cff_raw$Habitat == "marine_reef",]$Habitat <- "demersal"
cff_raw[cff_raw$Habitat == "bathypelagic",]$Habitat <- "pelagic"
cff_raw$mode_of_life <- factor(cff_raw$mode_of_life,
levels = c("pred_forage",
"deposite",
"pred_ballistic",
#  "scavenger",
"pred_pursuit"
#  ,"herbivore"
# ,"parasite"
))
cff_raw$Habitat <- factor(cff_raw$Habitat,
levels = c("terrestrial",
"pelagic",
"demersal",
#"marine_reef",
#"bathypelagic",
"volant",
"arboreal",
"benthopelagic"
))
cff_clean_no_syn <- cff_raw[,c("Scientific_name",
"taxa_group",
"taxa_phyla",
"taxa_class",
"Light_Level",
"Method",
"Max_CFF_Hz",
"Bodymass.g.",
"Habitat",
"mode_of_life")]
cff_clean_no_syn <- na.omit(cff_clean_no_syn)
cff_clean_no_syn
